[general]
context = <%= @sip['context']  %>
allowguest = <%= @sip['allowguest'] %>
allowoverlap = <%= @sip['allowoverlap'] %>
allowtransfer = <%= @sip['allowtransfer'] %>
bindport = <%= @sip['bindport'] %>
bindaddr = <%= @sip['bindaddr'] %>
localnet = 192.168.1.0/255.255.255.0
tcpenable = <%= @sip['tcpenable'] %>
tcpbindaddr = <%= @sip['bindaddr'] %>
srvlookup = <%= @sip['srvlookup'] %>
pedantic = <%= @sip['pedantic'] %>
tos_sip = <%= @sip['tos_sip'] %>
tos_audio = <%= @sip['tos_audio'] %>
tos_video = <%= @sip['tos_video'] %>
maxexpiry = <%= @sip['maxexpiry'] %>
minexpirey = <%= @sip['minepxiry'] %>
defaultexpiry = <%= @sip['defaultexpiry'] %>
t1min = <%= @sip['t1min'] %>
notifymimetype = <%= @sip['notifymimetype'] %>
checkmwi = <%= @sip['checkmwi'] %>
buggymwi = <%= @sip['buggymwi'] %>
vmexten = <%= @sip['vmexten'] %>
disallow = <%= @sip['disallow'] %>
<% @sip['allow'].each do |allow| %>
allow = <%= allow -%>

<% end %>
mohinterpret = <%= @sip['mohinterpret'] %>
mohsuggest = <%= @sip['mohsuggest'] %>
language = <%= @sip['language'] %>
relaxdtmf = <%= @sip['relaxdtmf'] %>
trustpid = <%= @sip['trustpid'] %>
sendrpid = <%= @sip['sendrpid'] %>
progressinband = <%= @sip['progressinband'] %>
useragent = <%= @sip['useragent'] %>
promiscredir = <%= @sip['promiscredir'] %>
usereqphone = <%= @sip['usereqphone'] %>
dtmfmode = <%= @sip['dtmfmode'] %>
compactheaders = <%= @sip['compactheaders'] %>
videosupport = <%= @sip['videosupport'] %>
maxcallbitrate = <%= @sip['maxcallbitrate'] %>
callevents = <%= @sip['callevents'] %>
alwaysauthreject = <%= @sip['alwaysauthreject'] %>
g726nonstandard = <%= @sip['g726nonstandard'] %>
matchexterniplocally = <%= @sip['matchexterniplocally'] %>
regcontext = <%= @sip['regcontext'] %>
rtptimeout = <%= @sip['rtptimeout'] %>
rtpholdtimeout = <%= @sip['rtpholdtimeout'] %>
rtpkeepalive = <%= @sip['rtpkeepalive'] %>
sipdebug = <%= @sip['sipdebug'] %>
recordhistory = <%= @sip['recordhistory'] %>
dumphistory = <%= @sip['dumphistory'] %>
allowsubscribe = <%= @sip['allowsubscribe'] %>
subscribecontext = <%= @sip['subscribecontext'] %>
notifyringing = <%= @sip['notifyringing'] %>
notifyhold = <%= @sip['notifyhold'] %>
limitonpeers = <%= @sip['limitonpeers'] %>
t38pt_udptl = <%= @sip['t38pt_udptl'] %>
rtpkeepalive = 1

externip = <%= node['asterisk']['public_ip'] %>  ; Address that we're going to put in outbound SIP

;----------------------------------------- REALTIME SUPPORT ------------------------
; For additional information on ARA, the Asterisk Realtime Architecture,
; please read realtime.txt and extconfig.txt in the /doc directory of the
; source code.
;
;rtcachefriends=yes		; Cache realtime friends by adding them to the internal list
				; just like friends added from the config file only on a
				; as-needed basis? (yes|no)

;rtsavesysname=yes		; Save systemname in realtime database at registration
				; Default= no

;rtupdate=yes			; Send registry updates to database using realtime? (yes|no)
				; If set to yes, when a SIP UA registers successfully, the ip address,
				; the origination port, the registration period, and the username of
				; the UA will be set to database via realtime.
				; If not present, defaults to 'yes'.
;rtautoclear=yes		; Auto-Expire friends created on the fly on the same schedule
				; as if it had just registered? (yes|no|<seconds>)
				; If set to yes, when the registration expires, the friend will
				; vanish from the configuration until requested again. If set
				; to an integer, friends expire within this number of seconds
				; instead of the registration interval.

;ignoreregexpire=yes		; Enabling this setting has two functions:
				;
				; For non-realtime peers, when their registration expires, the
				; information will _not_ be removed from memory or the Asterisk database
				; if you attempt to place a call to the peer, the existing information
				; will be used in spite of it having expired
				;
				; For realtime peers, when the peer is retrieved from realtime storage,
				; the registration information will be used regardless of whether
				; it has expired or not; if it expires while the realtime peer
				; is still in memory (due to caching or other reasons), the
				; information will not be removed from realtime storage


[authentication]

<% @users.each do |user| %>
[<%= user['username'] %>]
defaultuser=<%= user['username'] %>
secret=<%= user['password'] %>
type=friend
callerid="<%= user['full_name'] %> <<%= user['username'] %>>"
host=dynamic
context=<%= user['context'] %>
<% end %>
